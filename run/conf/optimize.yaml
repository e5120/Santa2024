# export PYTHONPATH=. && export CUDA_VISIBLE_DEVICES=0 && python run/optimize.py
hydra:
  job:
    name: optimize
    chdir: true
  run:
    dir: ${dir.output_dir}/${exp_name}/single
  sweep:
    dir: ${dir.output_dir}/${exp_name}
    subdir: run${hydra.job.num}
  callbacks:
    save_job_info:
      _target_: hydra.experimental.callbacks.PickleJobInfoCallback

defaults:
  - _self_
  - dir: local

target_id: 0
initial_solution: ~

num_cycles: 1000
temp_start: 10.0
temp_end: 0.5
cooling_rate: 0.999
steps_per_temp: 10
alpha: 1.0
verbose: true
logging_step: 50

taboo_size: 0
fix_ids: []
operators: [
  # {
  #   operator: OnePointShuffle,
  #   operator_kwargs: {},
  # },
  {
    operator: PairPointShuffle,
    operator_kwargs: {
      window_size: ~,
      min_p: 0.05,
    },
  },
  {
    operator: TokensShuffle,
    operator_kwargs: {
      min_tokens: 1,
      max_tokens: 5,
      min_p: 1.0e-08,
    },
  },
  {
    operator: TokensReverse,
    operator_kwargs: {
      min_tokens: 2,
      max_tokens: 4,
    },
  },
  {
    operator: TokensInsert,
    operator_kwargs: {
      min_tokens: 1,
      max_tokens: 5,
      window_size: ~,
      min_p: 0.01,
    },
  },
  # {
  #   operator: TokensRandomShuffle,
  #   operator_kwargs: {
  #     num_shuffles: 5,
  #   },
  # },
]

sampler: UniformSampler
# sampler: OrderSampler
sampler_kwargs: {
}

exp_name: dummy
model_path: google/gemma-2-9b
load_in_8bit: False
device_map: auto
seed: 42
